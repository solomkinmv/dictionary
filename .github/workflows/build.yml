name: Build && Deploy

on:
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: gradle

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: dictionary-client/package-lock.json

      - name: Build client and copy to backend resources
        run: |
          cd dictionary-client
          npm install
          npm run build
          rm -rf ../dictionary-server/src/main/resources/public/static/
          \cp -r ./build/* ../dictionary-server/src/main/resources/public/

      - name: Build Docker image
        run: |
          cd dictionary-server
          ./gradlew bootBuildImage --imageName=solomkinmv/dictionary:latest

      - name: Push Docker image
        run: |
          docker push solomkinmv/dictionary:latest

      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: get next version
        id: 'bump'
        uses: allegro-actions/next-version@v1

      - name: Push new tag on master
        uses: allegro-actions/create-tag@v1
        with:
          tag: ${{ steps.bump.outputs.next_tag }}
          current-tag: ${{ steps.bump.outputs.current_tag }}

      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          file: ./dictionary-server/build/jacoco/test.exec

#  deploy:
#    needs: build
#
#    uses: ./.github/workflows/deploy.yml
#    secrets: inherit

